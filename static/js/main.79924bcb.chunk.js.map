{"version":3,"sources":["mocks/categories.js","gateways/CategoryApi.js","mocks/products.js","gateways/ProductApi.js","reducers/index.js","reducers/categories.js","actions/categories.js","reducers/products.js","actions/products.js","components/Main/Main.js","components/Header/Header.js","components/Products/Product.js","components/Products/ProductsList.js","components/Products/ProductsContainer.js","components/NotFound/NotFound.js","routes.js","index.js"],"names":["categories","id","name","categoryApi","getCategories","products","rating","featured","itemsInStock","receiptDate","brand","expirationDate","createdAt","productApi","getProducts","combineReducers","state","action","type","Main","children","Header","className","Product","product","dayjs","format","Card","CardBody","CardTitle","CardText","tag","ListGroup","ListGroupItem","map","category","key","ProductList","productsGroups","_chunk","Container","productsGroup","index","Row","Col","sm","ProductsContainer","dispatch","this","props","json","receiveCategories","receiveProducts","ProductsList","Component","connect","categoriesById","reduce","acc","getCategoriesById","NotFound","getRoutes","exact","path","component","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","App","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.79924bcb.chunk.js","sourcesContent":["const categories = [\r\n  {\r\n    id: 1,\r\n    name: 'TV & Home Cinema',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Laptops',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Watches',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Headphones',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Phones',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Desktops',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Monitors',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Printers',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Monitors',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Camera & Photo',\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Audio & HiFi',\r\n  },\r\n];\r\n\r\nexport default categories;\r\n","import categories from '../mocks/categories';\r\n\r\nclass CategoryApi {\r\n  getCategories = () => {\r\n    return categories;\r\n  }\r\n}\r\n\r\nexport const categoryApi = new CategoryApi();\r\n","const products = [\r\n  {\r\n    id: 1,\r\n    name: 'TV',\r\n    rating: 9,\r\n    featured: true,\r\n    itemsInStock: 2,\r\n    receiptDate: null,\r\n    brand: 'JVC',\r\n    categories: [1, 2, 9],\r\n    expirationDate: null,\r\n    createdAt: '2019-04-30T16:00:40+03:00',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'iPhone',\r\n    rating: 2,\r\n    featured: false,\r\n    itemsInStock: 0,\r\n    receiptDate: '2019-06-14',\r\n    brand: 'Apple',\r\n    categories: [5, 4, 3],\r\n    expirationDate: '2019-05-20',\r\n    createdAt: '2019-05-14T16:00:40+03:00',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'laptop',\r\n    rating: 5,\r\n    featured: false,\r\n    itemsInStock: 10,\r\n    receiptDate: null,\r\n    brand: 'HP',\r\n    categories: [2],\r\n    expirationDate: null,\r\n    createdAt: '2019-05-20T16:00:40+03:00',\r\n  },\r\n];\r\n\r\nexport default products;\r\n","import products from '../mocks/products';\r\n\r\nclass ProductApi {\r\n  getProducts = () => {\r\n    return products;\r\n  }\r\n}\r\n\r\nexport const productApi = new ProductApi();\r\n","import { combineReducers } from 'redux';\r\nimport { categories } from './categories';\r\nimport { products } from './products';\r\n\r\nexport default combineReducers({\r\n  categories,\r\n  products,\r\n});\r\n","import * as categoriesActions from '../actions/categories';\r\n\r\nexport function categories(state = [], action) {\r\n  switch (action.type) {\r\n    case categoriesActions.RECEIVE_CATEGORIES:\r\n      return [\r\n        ...action.categories,\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function getCategoriesById(state) {\r\n  return state.categories.reduce((acc, category) => {\r\n    return {\r\n      ...acc,\r\n      [category.id]: category\r\n    }\r\n  }, {})\r\n}\r\n","import { categoryApi } from '../gateways/CategoryApi';\r\n\r\nexport const REQUEST_CATEGORIES = 'REQUEST_CATEGORIES';\r\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES';\r\n\r\nconst requestCategories = () => ({\r\n  type: REQUEST_CATEGORIES,\r\n});\r\n\r\nconst receiveCategories = (json) => ({\r\n  type: RECEIVE_CATEGORIES,\r\n  categories: json.map(category => category),\r\n});\r\n\r\nexport const fetchCategories = () => dispatch => {\r\n  dispatch(requestCategories());\r\n  const json = categoryApi.getCategories();\r\n  dispatch(receiveCategories(json));\r\n};\r\n","import * as productsActions from '../actions/products';\r\n\r\nexport function products(state = [], action) {\r\n  switch (action.type) {\r\n    case productsActions.RECEIVE_PRODUCTS:\r\n      return [\r\n        ...action.products,\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { productApi } from '../gateways/ProductApi';\r\n\r\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\r\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS';\r\n\r\nconst requestProducts = () => ({\r\n  type: REQUEST_PRODUCTS,\r\n});\r\n\r\nconst receiveProducts = (json) => ({\r\n  type: RECEIVE_PRODUCTS,\r\n  products: json.map(product => product),\r\n});\r\n\r\nexport const fetchProducts = () => dispatch => {\r\n  dispatch(requestProducts());\r\n  const json = productApi.getProducts();\r\n  dispatch(receiveProducts(json));\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Main = ({ children }) => (<div>{children}</div>);\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ name }) => (\r\n  <Fragment>\r\n    <h2 className=\"h3\">{name}</h2>\r\n    <hr/>\r\n  </Fragment>\r\n);\r\n\r\nHeader.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardText, CardBody, CardTitle, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport dayjs from 'dayjs'\r\n\r\nconst shortDateFormat = 'MM/DD/YYYY';\r\nconst longDateFormat = 'MM/DD/YYYY hh:mm a';\r\n\r\nconst Product = ({ product }) => {\r\n  const receiptDate =  product.receiptDate ? dayjs(product.receiptDate).format(shortDateFormat) : '-';\r\n  const expirationDate =  product.expirationDate ? dayjs(product.expirationDate).format(shortDateFormat) : '-';\r\n  const createdAt = product.createdAt ? dayjs(product.createdAt).format(longDateFormat) : '-';\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>{product.name}</CardTitle>\r\n        <CardText tag=\"div\">\r\n          <ListGroup>\r\n            <ListGroupItem>Brand: {product.brand}</ListGroupItem>\r\n            <ListGroupItem>Rating: {product.rating}</ListGroupItem>\r\n            <ListGroupItem>Featured: {product.featured ? 'Yes' : 'No'}</ListGroupItem>\r\n            <ListGroupItem>Items In Stock: {product.itemsInStock}</ListGroupItem>\r\n            <ListGroupItem>\r\n              Categories:\r\n              <ul>\r\n                {product.categories.map(category => (\r\n                  <li key={category.id}>{category.name}</li>\r\n                ))}\r\n              </ul>\r\n            </ListGroupItem>\r\n            <ListGroupItem>Receipt Date: {receiptDate}</ListGroupItem>\r\n            <ListGroupItem>Expiration Date: {expirationDate}</ListGroupItem>\r\n            <ListGroupItem>Created At: {createdAt}</ListGroupItem>\r\n          </ListGroup>\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Product from './Product';\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport _chunk from 'lodash/chunk'\r\n\r\nconst ProductList = ({ products }) => {\r\n  const productsGroups = _chunk(products, 3)\r\n\r\n  return (\r\n    <Container>\r\n      {productsGroups.map((productsGroup, index) => (\r\n        <Row key={index} className=\"mb-5\">\r\n          {productsGroup.map(product => (\r\n            <Col sm=\"4\" key={product.id} >\r\n              <Product product={product}/>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nProductList.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../Header/Header';\r\nimport ProductsList from './ProductsList';\r\nimport { fetchCategories } from '../../actions/categories';\r\nimport { fetchProducts } from '../../actions/products';\r\nimport { getCategoriesById } from '../../reducers/categories';\r\n\r\nclass ProductsContainer extends Component {\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch(fetchCategories());\r\n    dispatch(fetchProducts());\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header name=\"Products\"/>\r\n        <ProductsList products={products}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nProductsContainer.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const categoriesById = getCategoriesById(state);\r\n\r\n  const products = state.products.map(product => {\r\n    const categories =  product.categories.map(id => categoriesById[id])\r\n\r\n    return {\r\n      ...product,\r\n      categories\r\n    };\r\n  });\r\n\r\n  return {\r\n    products,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProductsContainer);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (<h1>Not Found</h1>);\r\n\r\nexport default NotFound;\r\n","import React from 'react'\r\nimport { HashRouter , Switch, Route } from 'react-router-dom'\r\nimport Main from './components/Main/Main'\r\nimport ProductsContainer from './components/Products/ProductsContainer'\r\nimport NotFound from './components/NotFound/NotFound'\r\n\r\nexport function getRoutes() {\r\n  return (\r\n    <HashRouter>\r\n      <Main>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ProductsContainer}/>,\r\n          <Route path=\"*\" component={NotFound}/>,\r\n        </Switch>\r\n      </Main>\r\n    </HashRouter >\r\n  )\r\n}\r\n\r\nexport default getRoutes\r\n","import React from 'react';\r\nimport { hydrate, render } from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\nimport getRoutes from './routes'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nconst App = () => (\r\n  <div className=\"content\">\r\n    <div className=\"container\">\r\n      <Provider store={store}>\r\n        {getRoutes()}\r\n      </Provider>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst rootElement = document.getElementById('root');\r\nif (rootElement.hasChildNodes()) {\r\n  hydrate(<App/>, rootElement);\r\n} else {\r\n  render(<App/>, rootElement);\r\n}\r\n"],"sourceRoot":""}